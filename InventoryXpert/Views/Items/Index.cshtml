@model IEnumerable<InventoryXpert.Models.Item>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Manage Items</h1>

<div class="row">
    <div class="col-md-6">
        <a id="homeCreate" class="button btn-create" asp-action="Create">Create New</a>
    </div>
    <div class="col-md-6">
        <input type="text" id="searchInput" class="form-control" placeholder="Search...">
    </div>
</div>

<table class="table table-striped table-light table-bordered table-hover">
    <thead class ="table-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Active)
            </th>
            <th>
                Stocked Quantity
            </th>
            <th>
                Available Quantity
            </th>
            <th>
                Quantity On Order
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th>
                Tag A
            </th>
            <th>
                Tag B
            </th>
            <th>
                Tag C
            </th>
            <th>
                Tag D
            </th>
            <th>
                Tag E
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id ="categoryTableBody">
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Active)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StockedQuantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AvailableQuantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuantityOnOrder)
            </td>
            <td>
                @String.Format("{0:C}", item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TagA)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TagB)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TagC)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TagD)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TagE)
            </td>
            <td>
                @if (item.Category != null)
                {
                    @Html.DisplayFor(modelItem => item.Category.CategoryName)
                }
                else
                {
                    <span>No Category</span>
                }
            </td>
            <td>
                <a class="button btn-dataOptions" asp-action="Edit" asp-route-id="@item.ItemId">Edit</a> |
                <a class="button btn-dataOptions" asp-action="Details" asp-route-id="@item.ItemId">Details</a> |
                <a class="button btn-dataOptions" asp-action="Delete" asp-route-id="@item.ItemId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<p id="noResultsMessage" class="text-center" style="display: none;">No matching results found.</p>

@section scripts {
    <script>
        $(document).ready(function () {
            $('#searchInput').on('input', function () {
                var searchText = $(this).val().toLowerCase();
                var $rows = $('#categoryTableBody tr');
                var $noResultsMessage = $('#noResultsMessage');

                var hasResults = false;

                $rows.each(function () {
                    var description = $(this).find('td:nth-child(1)').text().toLowerCase();
                    var active = $(this).find('td:nth-child(2)').text().toLowerCase();
                    var stockedQuantity = $(this).find('td:nth-child(3)').text().toLowerCase();
                    var availableQuantity = $(this).find('td:nth-child(4)').text().toLowerCase();
                    var quantityOnOrder = $(this).find('td:nth-child(5)').text().toLowerCase();
                    var price = $(this).find('td:nth-child(6)').text().toLowerCase();
                    var location = $(this).find('td:nth-child(7)').text().toLowerCase();
                    var tagA = $(this).find('td:nth-child(8)').text().toLowerCase();
                    var tagB = $(this).find('td:nth-child(9)').text().toLowerCase();
                    var tagC = $(this).find('td:nth-child(10)').text().toLowerCase();
                    var tagD = $(this).find('td:nth-child(11)').text().toLowerCase();
                    var tagE = $(this).find('td:nth-child(12)').text().toLowerCase();
                    var category = $(this).find('td:nth-child(13)').text().toLowerCase();

                    if (description.includes(searchText) || active.includes(searchText) || stockedQuantity.includes(searchText) ||
                        availableQuantity.includes(searchText) || quantityOnOrder.includes(searchText) || price.includes(searchText) ||
                        location.includes(searchText) || tagA.includes(searchText) || tagB.includes(searchText) ||
                        tagC.includes(searchText) || tagD.includes(searchText) || tagE.includes(searchText) ||
                        category.includes(searchText)) {
                        $(this).show();
                        hasResults = true;
                    } else {
                        $(this).hide();
                    }
                });

                if (!hasResults) {
                    $noResultsMessage.show();
                } else {
                    $noResultsMessage.hide();
                }
            });
        });
    </script>
}
